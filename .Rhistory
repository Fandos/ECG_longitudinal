datos <- read.table("recuperainfarto.txt", header = FALSE)
View(datos)
datos <- read.table("recuperainfarto.txt", header = TRUE)
View(datos)
datos <- read.table("recuperainfarto.txt")
View(datos)
datos <- read.table("recuperainfarto.txt", header = TRUE)
View(datos)
colnames(datos) <- c("hospital", "semana1", "semana2", "semana3", "semana4", "semana5")
datos <- read.table("recuperainfarto.txt", header = TRUE)
colnames(datos) <- c("hospital", "semana1", "semana2", "semana3", "semana4", "semana5")
datos <- read.table("recuperainfarto.txt", header = F)
colnames(datos) <- c("hospital", "semana1", "semana2", "semana3", "semana4", "semana5")
View(datos)
datos <- read.table("recuperainfarto.txt", header = TRUE)
colnames(datos) <- c("hospital", "semana1", "semana2", "semana3", "semana4", "semana5")
datos$id <- 1:nrow(datos)
View(datos)
library(tidyr)
library(dplyr)
library(tidyr)
library(dplyr)
library(tidyr)
library(dplyr)
datos <- read.table("recuperainfarto.txt", header = TRUE)
colnames(datos) <- c("hospital", "semana1", "semana2", "semana3", "semana4", "semana5")
datos$id <- 1:nrow(datos)
datos <- arrange(datos, hospital, semana)
View(datos)
summary(datos)
datos_largos <- datos %>%
pivot_longer(cols = starts_with("semana"),
names_to = "tiempo",
values_to = "indice_bartel") %>%
mutate(tiempo = gsub("semana", "", tiempo))  # Convertir a número
datos_largos <- datos_largos %>% arrange(hospital, tiempo)
View(datos_largos)
View(datos)
p <- ggplot(data = datos, aes(x = tiempo, y = indice_bartel, group = id), color = as.factor(id))
library(tidyr)
library(dplyr)
library(ggplot2)
p <- ggplot(data = datos, aes(x = tiempo, y = indice_bartel, group = id), color = as.factor(id))
p + geom_line(col="lightblue") + stat_summary(aes(group = 1),
geom = "line", fun = mean, size=2)
p <- ggplot(data = datos, aes(x = tiempo, y = indice_bartel, group = id), color = as.factor(id))
p + geom_line() + stat_summary(fun = mean, geom = "line"),
p <- ggplot(data = datos, aes(x = tiempo, y = indice_bartel, group = id), color = as.factor(id))
p + geom_line() + stat_summary(fun = mean, geom = "line")
p <- ggplot(data = datos_largos, aes(x = tiempo, y = indice_bartel, group = id), color = as.factor(id))
p + geom_line() + stat_summary(fun = mean, geom = "line")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
labs(title = "Evolución del índice de Bartel por individuo",
x = "Semana",
y = "Índice de Bartel") +
# Ocultar la leyenda
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
labs(title = "Evolución del índice de Bartel por individuo",
x = "Semana",
y = "Índice de Bartel")
# Ocultar la leyenda
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
stat_summary(fun = mean, geom = "line") +
labs(title = "Evolución del índice de Bartel por individuo",
x = "Semana",
y = "Índice de Bartel")
# Ocultar la leyenda
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
geom_point() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel")
p <- ggplot(data = datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))
p + geom_line() + stat_summary(fun = mean, geom = "line")
p <- ggplot(data = datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id)))
p + geom_line() + stat_summary(fun = mean, geom = "line")
p <- ggplot(data = datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id)))
p + geom_line() + stat_summary(fun = mean, geom = "line")
p <- ggplot(data = datos_largos, aes(x = tiempo, y = indice_bartel, group = id))
p + geom_line() + stat_summary(fun = mean, geom = "line")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = id)) +
geom_line() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 6.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital") +
theme_minimal()
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital") +
theme_minimal()
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital") +
theme_minimal()
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel") +
theme_minimal()
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, group = id, color = as.factor(id))) +
geom_line() +
labs(title = "Evolución del índice de Bartel por individuo", x = "Semana", y = "Índice de Bartel") +
theme(legend.position = "none")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
geom_line()
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
geom_point()
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "point", size = 3) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "point") +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
ggplot(datos_largos, aes(x = tiempo, y = indice_bartel, color = as.factor(hospital))) +
stat_summary(fun = mean, geom = "point", size=2) +
labs(title = "Evolución del índice de Bartel por hospital",
x = "Semana",
y = "Índice de Bartel",
color = "Hospital")
datos_largos$hospital <- as.factor(datos_largos$hospital)
datos_largos$tiempo <- as.factor(datos_largos$tiempo)
modelo_anova <- aov(indice_bartel ~ hospital * tiempo + Error(id/tiempo), data = datos_largos)
summary(modelo_anova)
ezANOVA(data=datos_largos, dv=indice_bartel, wid=id, within=tiempo, detailed = TRUE)
library(ez)
ezANOVA(data=datos_largos, dv=indice_bartel, wid=id, within=tiempo, detailed = TRUE)
datos_largos$hospital <- as.factor(datos_largos$hospital)
datos_largos$tiempo <- as.factor(datos_largos$tiempo)
datos_largos$id <- as.factor(datos_largos$id)
library(ez)
ezANOVA(data=datos_largos, dv=indice_bartel, wid=id, within=tiempo, detailed = TRUE)
library(ez)
ezANOVA(data=datos_largos, dv=indice_bartel, wid=id, within=tiempo, between = hospital, detailed = TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(geepack)
install.packages("geepack")
library(geepack)
library(lme4)
library(nlme)
library(ggplot2)
data(dietox)
library(geepack)
library(lme4)
library(nlme)
library(ggplot2)
data(dietox)
library(geepack)
library(lme4)
library(nlme)
library(ggplot2)
data(dietox)
summary(dietox)
library(geepack)
library(lme4)
library(nlme)
library(ggplot2)
data(dietox)
summary(dietox)
View(dietox)
ggplot(dietox, aes(x = Time, y = Weight, color = factor(Evit))) +
geom_line(aes(group = Litter), alpha = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del Peso según Evit", x = "Semana", y = "Peso")
ggplot(dietox, aes(x = Time, y = Weight, color = factor(Cu))) +
geom_line(aes(group = Litter), alpha = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del Peso según Cu", x = "Semana", y = "Peso")
modelo1 <- lmer(Weight ~ Time + Start + Evit + Cu + (1 | Litter), data = dietox)
summary(modelo1)
modelo2 <- lme(Weight ~ Time + Start + Evit + Cu, random = ~ 1 | Litter, correlation = corAR1(), data = dietox)
summary(modelo2)
ggplot(dietox, aes(x = Time, y = Weight, color = factor(Evit))) +
geom_line(aes(group = Litter), alpha = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del Peso según Evit", x = "Semana", y = "Peso")
ggplot(dietox, aes(x = Time, y = Weight, color = factor(Cu))) +
geom_line(aes(group = Litter), alpha = 0.3) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del Peso según Cu", x = "Semana", y = "Peso")
modelo <- lmer(Weight ~ Time + Start + Evit + Cu + (1 | Litter), data = dietox)
summary(modelo)
AIC(modelo, modelo_cor)
modelo_cor <- lme(Weight ~ Time + Start + Evit + Cu, random = ~ 1 | Litter, correlation = corAR1(), data = dietox)
summary(modelo_cor)
AIC(modelo, modelo_cor)
BIC(modelo, modelo_cor)
modelo_final <- lme(Weight ~ Time + Start + Evit * Cu, random = ~ 1 | Litter, correlation = corAR1(), data = dietox)
summary(modelo_final)
dietox$StartGroup <- cut(dietox$Start, breaks = 3, labels = c("Bajo", "Medio", "Alto"))
ggplot(dietox, aes(x = Time, y = Weight, color = StartGroup)) +
stat_summary(fun = mean, geom = "line", size = 1.2) +
labs(title = "Evolución del Peso según Start", x = "Semana", y = "Peso")
install.packages("geepack")
install.packages("xfun")
library(geepack)
lines<- read.lines ("ECGPCG0003.dat", warn=F)
# Descargamos los archivos desde PhysioNet y los guardamos en el directorio de trabajo.
hea_file <- "ECGPCG0003.hea"
dat_file <- "ECGPCG0003.dat"
# Leemos los metadatos del ECG (archivo .hea).
hea_data <- readLines(hea_file)
sampling_rate <- as.numeric(strsplit(hea_data[1], " ")[[1]][3])  # Extraer la frecuencia de muestreo
setwd("C:/Users/Usuario/Documents/4o curso - 2o semestre/Dades Longitudinals/Github")
# Descargamos los archivos desde PhysioNet y los guardamos en el directorio de trabajo.
hea_file <- "ECGPCG0003.hea"
dat_file <- "ECGPCG0003.dat"
# Leemos los metadatos del ECG (archivo .hea).
hea_data <- readLines(hea_file)
sampling_rate <- as.numeric(strsplit(hea_data[1], " ")[[1]][3])  # Extraer la frecuencia de muestreo
# Leemos la señal del ECG (archivo .dat).
signal <- readBin(dat_file, what = "integer", size = 2, signed = TRUE, endian = "little", n = file.info(dat_file)$size / 2)
# Creamos una serie temporal en función de la frecuencia de muestreo
time <- seq(0, length(signal) - 1) / sampling_rate
# Graficamos el ECG
plot(time, signal, type = "l", main = "Señal ECG", xlab = "Tiempo (s)", ylab = "Amplitud")
library(pracma)
# Primero detectamos los picos
picos <- findpeaks(signal, nups = 1, ndowns = 1, minpeakheight = max(signal) * 0.6, minpeakdistance = sampling_rate / 2)
# Después graficamos estos picos en el ECG
plot(time, signal, type = "l", main = "ECG con Picos R", xlab = "Tiempo (s)", ylab = "Amplitud")
points(time[picos[, 2]], picos[, 1], col = "red", pch = 19)  # Marcar picos R en rojo
library(pracma)
# Primero detectamos los picos
picos <- findpeaks(signal, nups = 1, ndowns = 1, minpeakheight = max(signal) * 0.6, minpeakdistance = sampling_rate / 2)
# Después graficamos estos picos en el ECG
plot(time, signal, type = "l", main = "ECG con Picos R", xlab = "Tiempo (s)", ylab = "Amplitud")
points(time[picos[, 2]], picos[, 1], col = "red", pch = 19)  # Marcar picos R en rojo
# Obtenemos los tiempos de los picos R
RR_intervals <- diff(time[picos[, 2]])
# Después graficamos la variabilidad de los intervalos RR
plot(RR_intervals, type = "o", main = "Intervalos RR", xlab = "Latido", ylab = "Tiempo (s)")
# Calculamos los cuartiles y el rango intercuartil
Q1 <- quantile(RR_intervals, 0.25)
Q3 <- quantile(RR_intervals, 0.75)
IQR <- Q3 - Q1
# Definimos las anomalías
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
# Identificamos anomalías
anomalous_RR <- which(RR_intervals < lower_bound | RR_intervals > upper_bound)
